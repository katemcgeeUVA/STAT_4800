
#1
```{r}
pbpdata <- readRDS("~/Desktop/Stat/pbp2014-2024.rds")
head(pbpdata)

run_drive <- function(D, YTG, FP){
  
  # initialize the flag for continuing the drive
  continue_drive <- 0
  
  # while there are still downs to play, continue running the drive
  while(continue_drive == 0){
    # run a single play
    new_state <- run_play(D, YTG, FP)
    
    # check if we should continue or switch possession
    continue_drive <- new_state$exit_drive
    
    # if the drive is continuing, update the state and continue
    D <- new_state$D
    YTG <- new_state$YTG
    FP <- new_state$FP
  }
  
  return(list(D=D, YTG=YTG, FP=FP))
}
```


# 2 
```{r}
# run_play.R

run_play <- function(D, YTG, FP){
  # Randomly select the down (1st, 2nd, 3rd, or 4th)
  down <- sample(1:4, 1)
  
  # Call the appropriate down-specific function
  if(down == 1) {
    return(down_one(D, YTG, FP))
  } else if(down == 2) {
    return(down_two(D, YTG, FP))
  } else if(down == 3) {
    return(down_three(D, YTG, FP))
  } else {
    return(down_four(D, YTG, FP))
  }
}

down_one <- function(D, YTG, FP){
  # simulate the first down
  YTG_new <- sample(0:5, 1)  # yards gained on first down
  YTG <- max(YTG - YTG_new, 0)  # update YTG
  
  # continue or finish the drive
  exit_drive <- ifelse(YTG == 0, 0, 1)  # 1st down ends if YTG = 0
  
  # update FP and return new state
  FP_new <- FP + YTG_new
  return(list(D=D, YTG=YTG, FP=FP_new, exit_drive=exit_drive))
}

down_two <- function(D, YTG, FP){
  # simulate the second down
  YTG_new <- sample(0:6, 1)  # yards gained on second down
  YTG <- max(YTG - YTG_new, 0)  # update YTG
  
  # continue or finish the drive
  exit_drive <- ifelse(YTG == 0, 0, 1)
  
  # update FP and return new state
  FP_new <- FP + YTG_new
  return(list(D=D, YTG=YTG, FP=FP_new, exit_drive=exit_drive))
}

down_three <- function(D, YTG, FP){
  # simulate the third down
  YTG_new <- sample(0:7, 1)  # yards gained on third down
  YTG <- max(YTG - YTG_new, 0)  # update YTG
  
  # continue or finish the drive
  exit_drive <- ifelse(YTG == 0, 0, 1)
  
  # update FP and return new state
  FP_new <- FP + YTG_new
  return(list(D=D, YTG=YTG, FP=FP_new, exit_drive=exit_drive))
}

down_four <- function(D, YTG, FP){
  # simulate the fourth down with different play types
  play_type <- sample(c("go_for_it", "punt", "field_goal"), 1)
  
  if(play_type == "field_goal") {
    # simulate a field goal attempt
    field_goal_success <- run_field_goal(FP)
    if(field_goal_success) {
      # if successful, return state with FP set to 115 (score)
      return(list(D=1, YTG=10, FP=115, exit_drive=1))
    } else {
      # if failed, switch possession
      return(list(D=D, YTG=YTG, FP=FP, exit_drive=1))
    }
    
  } else if(play_type == "punt") {
    # simulate a punt (change possession)
    return(list(D=D, YTG=YTG, FP=FP, exit_drive=1))
  } else if(play_type == "go_for_it") {
    # simulate "go for it" on 4th down
    go_for_it_success <- sample(c(TRUE, FALSE), 1)
    if(go_for_it_success) {
      # if successful, continue the drive with new FP
      FP_new <- FP + sample(1:10, 1)  # random yards gained
      return(list(D=1, YTG=10, FP=FP_new, exit_drive=0))
    } else {
      # if not successful, switch possession
      return(list(D=D, YTG=YTG, FP=FP, exit_drive=1))
    }
  }
}

run_field_goal <- function(FP) {
  # simulate field goal success/failure based on FP
  field_goal_probability <- ifelse(FP > 80, 0.5, 0.8)  # higher success rate closer to end zone
  return(runif(1) < field_goal_probability)
}

```
